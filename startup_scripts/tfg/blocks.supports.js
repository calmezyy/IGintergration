"use strict";

function registerTFGSupportBlocks(event) {
	// Wood
	event.create(`tfg:aeronos_support`, 'tfc:support')
		.textureAll(`ad_astra:block/aeronos_cap`)
		.horizontal(horizontal => {
			horizontal.textureAll(`ad_astra:block/aeronos_stem`)
			horizontal.soundType('wood')
			horizontal.hardness(2)
			horizontal.resistance(2)
			horizontal.mapColor('terracotta_blue')
			horizontal.tagBlock('minecraft:mineable/axe')
			horizontal.requiresTool(false)
		})
		.soundType('wood')
		.hardness(2)
		.resistance(2)
		.mapColor('terracotta_blue')
		.tagBlock('minecraft:mineable/axe')
		.requiresTool(false)

	event.create(`tfg:strophar_support`, 'tfc:support')
		.textureAll(`ad_astra:block/strophar_cap`)
		.horizontal(horizontal => {
			horizontal.textureAll(`ad_astra:block/strophar_stem`)
			horizontal.soundType('wood')
			horizontal.hardness(2)
			horizontal.resistance(2)
			horizontal.mapColor('color_white')
			horizontal.tagBlock('minecraft:mineable/axe')
			horizontal.requiresTool(false)
		})
		.soundType('wood')
		.hardness(2)
		.resistance(2)
		.mapColor('color_white')
		.tagBlock('minecraft:mineable/axe')
		.requiresTool(false)

	event.create(`tfg:glacian_support`, 'tfc:support')
		.textureAll(`ad_astra:block/stripped_glacian_log`)
		.horizontal(horizontal => {
			horizontal.textureAll(`ad_astra:block/stripped_glacian_log`)
			horizontal.soundType('wood')
			horizontal.hardness(2)
			horizontal.resistance(2)
			horizontal.mapColor('crimson_stem')
			horizontal.tagBlock('minecraft:mineable/axe')
			horizontal.requiresTool(false)
		})
		.soundType('wood')
		.hardness(2)
		.resistance(2)
		.mapColor('crimson_stem')
		.tagBlock('minecraft:mineable/axe')
		.requiresTool(false)
		
	// Stone
	global.TFC_STONE_TYPES.forEach(stone => {
		event.create(`tfg:${stone}_support`, 'tfc:support')
			.textureAll(`tfc:block/rock/raw/${stone}`)
			.horizontal(horizontal => {
				horizontal.textureAll(`tfc:block/rock/raw/${stone}`)
				horizontal.soundType('stone')
				horizontal.hardness(5)
				horizontal.resistance(8)
				horizontal.mapColor('color_gray')
				horizontal.tagBlock('minecraft:mineable/pickaxe')
				horizontal.requiresTool(true)
			})
			.soundType('stone')
			.hardness(5)
			.resistance(8)
			.mapColor('color_gray')
			.tagBlock('minecraft:mineable/pickaxe')
			.requiresTool(true)
	})

	event.create(`tfg:migmatite_support`, 'tfc:support')
		.textureAll('minecraft:block/deepslate')
		.horizontal(horizontal => {
			horizontal.textureAll('minecraft:block/deepslate')
			horizontal.soundType(global.STONE_CHARACS.deepslate.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.deepslate.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.deepslate.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.deepslate.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:pyroxenite_support`, 'tfc:support')
		.textureAll('minecraft:block/blackstone')
		.horizontal(horizontal => {
			horizontal.textureAll('minecraft:block/blackstone')
			horizontal.soundType(global.STONE_CHARACS.blackstone.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.blackstone.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.blackstone.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.blackstone.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:travertine_support`, 'tfc:support')
		.textureAll('minecraft:block/dripstone_block')
		.horizontal(horizontal => {
			horizontal.textureAll('minecraft:block/dripstone_block')
			horizontal.soundType(global.STONE_CHARACS.dripstone.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.dripstone.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.dripstone.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.dripstone.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:keratophyre_support`, 'tfc:support')
		.textureAll('beneath:block/crackrack')
		.horizontal(horizontal => {
			horizontal.textureAll('beneath:block/crackrack')
			horizontal.soundType(global.STONE_CHARACS.crackrack.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.crackrack.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.crackrack.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.crackrack.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:anorthosite_support`, 'tfc:support')
		.textureAll('ad_astra:block/moon_stone')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/moon_stone')
			horizontal.soundType(global.STONE_CHARACS.moon.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.moon.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.moon.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.moon.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:norite_support`, 'tfc:support')
		.textureAll('ad_astra:block/moon_deepslate')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/moon_deepslate')
			horizontal.soundType(global.STONE_CHARACS.moon_deepslate.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.moon_deepslate.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.moon_deepslate.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.moon_deepslate.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:argillite_support`, 'tfc:support')
		.textureAll('ad_astra:block/mars_stone')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/mars_stone')
			horizontal.soundType(global.STONE_CHARACS.mars.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.mars.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.mars.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.mars.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:trachyte_support`, 'tfc:support')
		.textureAll('ad_astra:block/venus_stone')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/venus_stone')
			horizontal.soundType(global.STONE_CHARACS.venus.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.venus.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.venus.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.venus.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:komatiite_support`, 'tfc:support')
		.textureAll('ad_astra:block/mercury_stone')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/mercury_stone')
			horizontal.soundType(global.STONE_CHARACS.mercury.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.mercury.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.mercury.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.mercury.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:phonolite_support`, 'tfc:support')
		.textureAll('ad_astra:block/glacio_stone')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/glacio_stone')
			horizontal.soundType(global.STONE_CHARACS.glacio.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.glacio.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.glacio.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.glacio.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:permafrost_support`, 'tfc:support')
		.textureAll('ad_astra:block/permafrost')
		.horizontal(horizontal => {
			horizontal.textureAll('ad_astra:block/permafrost')
			horizontal.soundType(global.STONE_CHARACS.permafrost.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.permafrost.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.permafrost.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.permafrost.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:red_granite_support`, 'tfc:support')
		.textureAll('gtceu:block/stones/red_granite/stone')
		.horizontal(horizontal => {
			horizontal.textureAll('gtceu:block/stones/red_granite/stone')
			horizontal.soundType(global.STONE_CHARACS.red_granite.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.red_granite.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.red_granite.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.red_granite.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create(`tfg:stone_support`, 'tfc:support')
		.textureAll('minecraft:block/stone')
		.horizontal(horizontal => {
			horizontal.textureAll('minecraft:block/stone')
			horizontal.soundType(global.STONE_CHARACS.reconstituted.sound)
			horizontal.hardness(5)
			horizontal.resistance(8)
			horizontal.mapColor(global.STONE_CHARACS.reconstituted.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.reconstituted.sound)
		.hardness(5)
		.resistance(8)
		.mapColor(global.STONE_CHARACS.reconstituted.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)
	
	// Concrete
	event.create('tfg:light_concrete_support', 'tfc:support')
		.textureAll('gtceu:block/stones/light_concrete/stone')
		.horizontal(horizontal => {
			horizontal.textureAll('gtceu:block/stones/light_concrete/stone')
			horizontal.soundType(global.STONE_CHARACS.light_concrete.sound)
			horizontal.hardness(5)
			horizontal.resistance(16)
			horizontal.mapColor(global.STONE_CHARACS.light_concrete.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.light_concrete.sound)
		.hardness(5)
		.resistance(16)
		.mapColor(global.STONE_CHARACS.light_concrete.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create('tfg:reinforced_light_concrete_support', 'tfc:support')
		.textureAll('gtceu:block/stones/light_concrete/stone')
		.horizontal(horizontal => {
			horizontal.textureAll('gtceu:block/stones/light_concrete/stone')
			horizontal.soundType(global.STONE_CHARACS.light_concrete.sound)
			horizontal.hardness(5)
			horizontal.resistance(64)
			horizontal.mapColor(global.STONE_CHARACS.light_concrete.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.light_concrete.sound)
		.hardness(5)
		.resistance(64)
		.mapColor(global.STONE_CHARACS.light_concrete.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create('tfg:dark_concrete_support', 'tfc:support')
		.textureAll('gtceu:block/stones/dark_concrete/stone')
		.horizontal(horizontal => {
			horizontal.textureAll('gtceu:block/stones/dark_concrete/stone')
			horizontal.soundType(global.STONE_CHARACS.dark_concrete.sound)
			horizontal.hardness(5)
			horizontal.resistance(16)
			horizontal.mapColor(global.STONE_CHARACS.dark_concrete.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.dark_concrete.sound)
		.hardness(5)
		.resistance(16)
		.mapColor(global.STONE_CHARACS.dark_concrete.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	event.create('tfg:reinforced_dark_concrete_support', 'tfc:support')
		.textureAll('gtceu:block/stones/dark_concrete/stone')
		.horizontal(horizontal => {
			horizontal.textureAll('gtceu:block/stones/dark_concrete/stone')
			horizontal.soundType(global.STONE_CHARACS.dark_concrete.sound)
			horizontal.hardness(5)
			horizontal.resistance(64)
			horizontal.mapColor(global.STONE_CHARACS.dark_concrete.mapColor)
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType(global.STONE_CHARACS.dark_concrete.sound)
		.hardness(5)
		.resistance(64)
		.mapColor(global.STONE_CHARACS.dark_concrete.mapColor)
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)

	// Metal
	event.create('tfg:rebar_support', 'tfc:support')
		.textureAll('tfg:block/support/rebar_support')
		.horizontal(horizontal => {
			horizontal.textureAll('tfg:block/support/rebar_support')
			horizontal.soundType('chain')
			horizontal.hardness(3)
			horizontal.resistance(16)
			horizontal.mapColor('color_orange')
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.tagBlock('minecraft:climbable')
			horizontal.requiresTool(true)
			horizontal.renderType('cutout')
			horizontal.opaque(false)
		})
		.soundType('chain')
		.hardness(3)
		.resistance(16)
		.mapColor('color_orange')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:climbable')
		.requiresTool(true)
		.renderType('cutout')
		.opaque(false)

	event.create('tfg:steel_support', 'tfc:support')
		.textureAll('tfg:block/support/steel_support')
		.horizontal(horizontal => {
			horizontal.textureAll('tfg:block/support/steel_support')
			horizontal.soundType('metal')
			horizontal.hardness(5)
			horizontal.resistance(64)
			horizontal.mapColor('color_gray')
			horizontal.tagBlock('minecraft:mineable/pickaxe')
			horizontal.requiresTool(true)
		})
		.soundType('metal')
		.hardness(5)
		.resistance(64)
		.mapColor('color_gray')
		.tagBlock('minecraft:mineable/pickaxe')
		.requiresTool(true)
}