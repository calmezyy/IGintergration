"use strict";

const registerTFGBlocks = (event) => {

	registerTFGNetherBlocks(event)
	registerTFGSpaceBlocks(event)
	registerTFGSupportBlocks(event)
	registerTFGAqueductBlocks(event)
	registerTFGCrops(event)
		
	event.create('tfg:exhaust_vent_particle', 'tfg:active_particle_emitter')
		.textureAll('tfg:block/titanium_concrete')
		.soundType('metal')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_black')
		.speedFactor(1.1)
		.activeOffset(3.5, 2, 3.5)
		.activeVelocity(0.0, 0.0, 0.0)
		.activeParticle('tfg:cooling_steam')
		.activeBase(0.0, 12.5, 0.0)
		.activeCount(8)
		.activeForced(false)
		.hasTicker(true) 
 
	// #region Machine Casings

	global.TFG_MACHINE_CASINGS.forEach(type => {
		event.create(`tfg:casings/${type}`)
			.translationKey(`block.tfg.casings.${type}`)
			.model(`tfg:block/casings/${type}`)
			.soundType('copper')
			.hardness(5)
			.resistance(6)
			.tagBlock('minecraft:mineable/pickaxe')
			.tagBlock('minecraft:mineable/wrench')
			.mapColor('color_light_gray')
	})

	event.create(`tfg:casings/machine_casing_stainless_evaporation`)
		.translationKey(`block.tfg.casings.machine_casing_stainless_evaporation`)
		.model(`tfg:block/casings/machine_casing_stainless_evaporation`)
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_light_gray')

    event.create('tfg:casings/machine_casing_vacuum_engine_intake', 'gtceu:active')
        .simple('tfg:block/casings/machine_casing_vacuum_engine_intake')
        .translationKey('block.tfg.casings.machine_casing_vacuum_engine_intake')
        .soundType('metal')
        .resistance(6).hardness(5)
        .tagBlock('mineable/pickaxe')
        .tagBlock('forge:mineable/wrench')
        .requiresTool(true)
		.mapColor('color_light_gray')

	event.create('tfg:casings/machine_casing_bioculture')
		.translationKey('block.tfg.casings.machine_casing_bioculture')
		.model('tfg:block/casings/machine_casing_bioculture')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_red')

	event.create('tfg:casings/machine_casing_bioculture_glass')
		.translationKey('block.tfg.casings.machine_casing_bioculture_glass')
		.model('tfg:block/casings/machine_casing_bioculture_glass')
		.soundType('glass')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_orange')
		.defaultTranslucent()

	event.create('tfg:casings/bioculture_rotor_primary', 'tfg:active_particle_emitter')
		.translationKey('block.tfg.casings.bioculture_rotor_primary')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_light_gray')
		.activeOffset(1.6, 2, 1.6)
		.activeVelocity(0, 0, 0)
		.activeParticle('minecraft:landing_lava')
		.activeCount(10)
		.activeForced(false)

	event.create('tfg:casings/bioculture_rotor_secondary', 'gtceu:active')
		.translationKey('block.tfg.casings.bioculture_rotor_secondary')
		.model('tfg:block/casings/bioculture_rotor_secondary')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_light_gray')

	event.create('tfg:casings/machine_casing_ultraviolet', 'gtceu:active')
		.translationKey('block.tfg.casings.machine_casing_ultraviolet')
		.soundType('glass')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_light_gray')
	
	event.create('tfg:casings/heat_pipe_casing')
		.translationKey('block.tfg.casings.heat_pipe_casing')
		.model('tfg:block/casings/heat_pipe_casing')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_black')

	event.create('tfg:sample_rack', 'tfg:active_cardinal')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_light_gray')
		.notSolid()
		.renderType('cutout')
		.opaque(false)

	event.create('tfg:growth_monitor', 'tfg:active_cardinal')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_light_gray')
		.notSolid()
		.renderType('cutout')
		.opaque(false)

	event.create('tfg:casings/machine_casing_sterilizing_pipes', 'tfg:active_cardinal')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.mapColor('color_brown')

	//#endregion
	
	event.create('tfg:titanium_concrete')
		.translationKey('block.tfg.titanium_concrete')
		.model('tfg:block/concrete/titanium_concrete')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	event.create('tfg:polished_titanium_concrete')
		.translationKey('block.tfg.polished_titanium_concrete')
		.model('tfg:block/concrete/polished_titanium_concrete')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	event.create('tfg:titanium_concrete_tile')
		.translationKey('block.tfg.titanium_concrete_tile')
		.model('tfg:block/concrete/titanium_concrete_tile')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	event.create('tfg:titanium_concrete_tile_small')
		.translationKey('block.tfg.titanium_concrete_tile_small')
		.model('tfg:block/concrete/titanium_concrete_tile_small')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	event.create('tfg:titanium_concrete_bricks')
		.translationKey('block.tfg.titanium_concrete_bricks')
		.model('tfg:block/concrete/titanium_concrete_bricks')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	event.create('tfg:titanium_concrete_bricks_small')
		.translationKey('block.tfg.titanium_concrete_bricks_small')
		.model('tfg:block/concrete/titanium_concrete_bricks_small')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	event.create('tfg:titanium_concrete_bricks_square')
		.translationKey('block.tfg.titanium_concrete_bricks_square')
		.model('tfg:block/concrete/titanium_concrete_bricks_square')
		.soundType('stone')
		.mapColor('stone')
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBoth('tfg:titanium_concrete')
		
	// #region insulation
	event.create('tfg:glacian_wool_frame')
		.soundType('copper')
		.hardness(4)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
	event.create('tfg:aes_insulation_frame')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')

	event.create('tfg:moderate_core_frame')
		.soundType('copper')
		.hardness(4)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
	event.create('tfg:impure_moderate_core_frame')
		.soundType('copper')
		.hardness(5)
		.resistance(6)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')

	// Unfinished Insulation
	event.create('tfg:moderate_core')
		.soundType('ancient_debris')
		.hardness(7)
		.resistance(8)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.model('tfg:block/fission/moderate_core')
	event.create('tfg:impure_moderate_core')
		.soundType('ancient_debris')
		.hardness(7)
		.resistance(8)
		.tagBlock('minecraft:mineable/pickaxe')
		.tagBlock('minecraft:mineable/wrench')
		.model('tfg:block/fission/impure_moderate_core')

	// #region Decorative vases
	global.MINECRAFT_DYE_NAMES.forEach(color => {
		event.create(`tfg:decorative_vase/generated/${color}`, 'cardinal')
			.model(`tfg:block/decorative_vase/loot_vase_${color}`)
			.soundType('decorated_pot')
			.hardness(0.7)
			.tagBlock('minecraft:mineable/pickaxe')
			.mapColor(`color_${color}`)
			.box(2, 0, 2, 14, 20, 14)
			.fullBlock(false)
			.opaque(false)
			.renderType('cutout')

		event.create(`tfg:decorative_vase/${color}`, 'cardinal')
			.model(`tfg:block/decorative_vase/vase_${color}`)
			.soundType('decorated_pot')
			.hardness(0.7)
			.tagBlock('minecraft:mineable/pickaxe')
			.mapColor(`color_${color}`)
			.box(2, 0, 2, 14, 20, 14)
			.fullBlock(false)
			.opaque(false)
			.renderType('cutout')
			.blockEntity(be => {
				be.attach('tfc:inventory', {
					width: 9,
					height: 1,
					size: size => size.isSmallerThan('large')
				})
				be.rightClickOpensInventory()
			})

		event.create(`tfg:decorative_vase/unfired/${color}`, 'cardinal')
			.model(`tfg:block/decorative_vase/vase_unfired_${color}`)
			.soundType('decorated_pot')
			.hardness(0.7)
			.tagBlock('minecraft:mineable/pickaxe')
			.mapColor(`color_${color}`)
			.box(2, 0, 2, 14, 20, 14)
			.fullBlock(false)
			.opaque(false)
			.renderType('cutout')
	})
	event.create('tfg:decorative_vase', 'cardinal')
		.model('tfg:block/decorative_vase/vase')
		.soundType('decorated_pot')
		.hardness(0.7)
		.tagBlock('minecraft:mineable/pickaxe')
		.mapColor(`color_gray`)
		.box(2, 0, 2, 14, 20, 14)
		.fullBlock(false)
		.opaque(false)
		.renderType('cutout')
		.blockEntity(be => {
			be.attach('tfc:inventory', {
				width: 9,
				height: 1,
				size: size => size.isSmallerThan('large')
			})
			be.rightClickOpensInventory()
		})

	event.create('tfg:decorative_vase/unfired', 'cardinal')
		.model('tfg:block/decorative_vase/vase_unfired')
		.soundType('decorated_pot')
		.hardness(0.7)
		.tagBlock('minecraft:mineable/pickaxe')
		.mapColor(`color_gray`)
		.box(2, 0, 2, 14, 20, 14)
		.fullBlock(false)
		.opaque(false)
		.renderType('cutout')

	// #endregion

	// #region Reconstituted Stone

	event.create(`tfg:rock/stone_wall`, 'wall')
			.soundType(global.STONE_CHARACS.reconstituted.sound)
			.textureAll('minecraft:block/stone')
			.tagBoth('tfg:rock_wall')
			.mapColor(global.STONE_CHARACS.reconstituted.mapColor)
			.tagBlock('minecraft:mineable/pickaxe')
			.fullBlock(true)
			.opaque(true)

	let SHAPES = ['stairs', 'wall']
	SHAPES.forEach(shape => {
		event.create(`tfg:rock/smooth_stone_${shape}`, shape)
			.soundType(global.STONE_CHARACS.reconstituted.sound)
			.textureAll('minecraft:block/smooth_stone')
			.tagBoth(`tfg:rock_${shape}s`.replace(/ss/g, 's'))
			.mapColor(global.STONE_CHARACS.reconstituted.mapColor)
			.tagBlock('minecraft:mineable/pickaxe')
			.fullBlock(true)
			.opaque(true)
	})

	SHAPES = ['stairs', 'slab', 'wall']
	SHAPES.forEach(shape => {
		event.create(`tfg:rock/cracked_bricks_stone_${shape}`, shape)
			.soundType(global.STONE_CHARACS.reconstituted.sound)
			.textureAll('minecraft:block/cracked_stone_bricks')
			.tagBoth(`tfg:brick_${shape}s`.replace(/ss/g, 's'))
			.mapColor(global.STONE_CHARACS.reconstituted.mapColor)
			.tagBlock('minecraft:mineable/pickaxe')
			.fullBlock(true)
			.opaque(true)
	})

	event.create('tfg:rock/quartz_wall', 'wall')
			.soundType('stone')
			.textureAll('minecraft:block/quartz_block_side')
			.tagBoth('tfg:rock_wall')
			.mapColor('snow')
			.tagBlock('minecraft:mineable/pickaxe')
			.fullBlock(true)
			.opaque(true)

	event.create('tfg:rock/smooth_quartz_wall', 'wall')
			.soundType('stone')
			.textureAll('minecraft:block/quartz_block_bottom')
			.tagBoth('tfg:rock_wall')
			.mapColor('snow')
			.tagBlock('minecraft:mineable/pickaxe')
			.fullBlock(true)
			.opaque(true)

	// #endregion Reconstituted Stone
}
